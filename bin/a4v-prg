#!/bin/bash
#
# Author: liyang@cmt.tsinghua
# Start Date: 2019.9.23
# Last Update: 2019.9.23
# Description: Calculation Process Check.
#

# Check if in the calc. folder

grep_input_file(){
  keyword="$1"
  res=$(grep "${keyword}" a4v.allparas 2>/dev/null | tail -1 | 
        awk -F '#' '{print $1}' | awk -F '=' '{print $NF}')
  echo ${res}
}

if [ ! -e a4v.input ]; then
  echo '[error] Not in a A4V calculation folder!!!'
  exit -1
fi

# Traverse and Record all Coaches' Info
cat /dev/null > VASP.log.temp
coach_list=$(ls . | grep COACH- | sed 's/-/ /g' | sort -n -k 2 | sed 's/ /-/g')
current_coach_num=0
for coach in ${coach_list}; do 
  if [ -e ${coach}/VASP.log ]; then 
    grep '\[' ${coach}/VASP.log >> VASP.log.temp
    ((current_coach_num++))
  else
    echo "[info] ${coach} is not working..."
  fi
done

# Get some necessary parameters
seed_name=$(grep_input_file 'SEED_NAME')
total_coach_num=$(echo ${coach_list} | wc -w)
total_str_num=$(ls POSCAR-POOL/${seed_name}-*.cell 2>/dev/null | wc -w)
untouched_str_num=$(ls POSCAR-POOL/${seed_name}-*.vasp 2>/dev/null | wc -w)
finished_str_num=$(ls RES-POOL/*.res 2>/dev/null | wc -w)
error_str_num=$(grep '\[error\]' VASP.log.temp | wc -l)
not_conv_str_num=$(grep '\[error\]' VASP.log.temp | 
                   grep 'Not reach the required accuracy' | wc -l)
no_contcar_str_num=$(grep '\[error\]' VASP.log.temp | 
                     grep 'CONTCAR not found' | wc -l)
bad_poscar_str_num=$(grep '\[error\]' VASP.log.temp | 
                     grep 'Bad initial structure' | wc -l)
((processed_str_num=error_str_num+finished_str_num))
calc_done=false
if [ "${total_str_num}" == "${processed_str_num}" ]; then 
  calc_done=true
  run_state='[done] Random searching done!'
else 
  run_state='[info] Random searching in processing...'
fi
start_time=$(grep '\[start_time\]' VASP.log.temp | awk '{print $2}' | 
             sort -n | head -1)
if ! ${calc_done}; then
  current_time=$(date +%s)
  ((total_time_spend=current_time-start_time))
else
  end_time=$(grep '\[end_time\]' VASP.log.temp | awk '{print $2}' | 
             sort -n | tail -1)
  ((total_time_spend=end_time-start_time))
fi
average_time_spend=$(grep '\[spend_time_raw\]' VASP.log.temp | 
                     awk -F ':' '{print $2}' |
                     awk '{sum+=$1}END{print sum/NR}')
average_time_spend=${average_time_spend%.*}
if [ -z "${average_time_spend}" ]; then
  total_time_spend_format='null'
  average_time_spend_format='null'
  esti_remain_time_format='null'
else
  total_time_spend_format=$(echo ${total_time_spend} | 
                            awk '{print int($1/86400)"d:"\
                                        int($1%86400/3600)"h:"\
                                        int($1%3600/60)"m:"\
                                        $1%60"s"}')
  average_time_spend_format=$(echo ${average_time_spend} | 
                              awk '{print int($1/86400)"d:"\
                                          int($1%86400/3600)"h:"\
                                          int($1%3600/60)"m:"\
                                          $1%60"s"}')
  ((esti_remain_time=untouched_str_num*average_time_spend/current_coach_num))
  esti_remain_time_format=$(echo ${esti_remain_time} | 
                                awk '{print int($1/86400)"d:"\
                                            int($1%86400/3600)"h:"\
                                            int($1%3600/60)"m:"\
                                            $1%60"s"}')
fi

# Process Summary Output
echo "================== Process Check =================="
echo "${run_state}"
if ! ${calc_done}; then
  echo "[info] Curr. Work Coach   :  ${current_coach_num}/${total_coach_num}"
fi
echo "[info] Seed Name          :  ${seed_name}"
echo "[info] Succeed Str.       :  ${finished_str_num}/${total_str_num}"
echo "[info] Error Str.         :  ${error_str_num}/${total_str_num}"
echo "[info] Not Converged      :  ${not_conv_str_num}/${error_str_num}"
echo "[info] Missing CONTCAR    :  ${no_contcar_str_num}/${error_str_num}"
echo "[info] Bad Init. POSCAR   :  ${bad_poscar_str_num}/${error_str_num}"
echo "[info] Ave. Time Per Str. :  ${average_time_spend_format}"
echo "[info] Total Time Spend   :  ${total_time_spend_format}"
echo "[info] Time Remain Estim. :  ${esti_remain_time_format}"
echo "==================================================="

# Useless file remove 
rm VASP.log.temp
